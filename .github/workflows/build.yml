name: CI

on:
  push:
    branches:
      - feature/build
  workflow_dispatch:
    inputs:
      tag:
        description: Image tag
        type: string
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write
  
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # - name: Set up Python
    #   uses: actions/setup-python@v2
    #   with:
    #     python-version: '3.13'

    # - name: Install dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     cd todo_site/
    #     ls -la

    - name: Docker Setup Docker
      uses: docker/setup-docker-action@v4.3.0
      with:
        # Docker CE version. (e.g, v24.0.9)
        version: v24.0.9

    # - name: Log in to GitHub Container Registry
    #   uses: docker/login-action@v2
    #   with:
    #     registry: ghcr.io
    #     username: ${{ github.actor }}
    #     password: ${{ secrets.GHCR_PAT }}


    # - name: Build and push Docker image
    #   uses: docker/build-push-action@v2
    #   with:
    #     context: "{{defaultContext}}:todo_site"
    #     push: true
    #     tags: ghcr.io/${{ github.repository_owner }}/flask-app:${{ github.event.inputs.tag || 'latest' }}
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push Docker image to ECR
      env:
          ECR_REPOSITORY: dev/super-service
          IMAGE_TAG: ${{ github.event.inputs.tag}}
      run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG ./todo_site/
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG        